/* inform by @sliceofcode, licensed under MIT license, (c) 2016 sliceofcode | http://github.com/sliceofcode/inform */
var InformScriptWrapper,inform;inform={VERSION:"0.0.1"},InformScriptWrapper=function(){function InformScriptWrapper(script1){this.script=script1}return InformScriptWrapper.prototype.defined=function(name){var scope;return scope=this.script.scope,org.mozilla.javascript.ScriptableObject.hasProperty(scope,name)},InformScriptWrapper.prototype.real=function(){return this.script},InformScriptWrapper.prototype.set=function(name,value){return org.mozilla.javascript.ScriptableObject.putProperty(this.scope(),name,value)},InformScriptWrapper.prototype.name=function(){return this.script.name},InformScriptWrapper.prototype.call=function(name,args){return org.mozilla.javascript.ScriptableObject.callMethod(this.scope(),name,args)},InformScriptWrapper.prototype.get=function(name){return org.mozilla.javascript.ScriptableObject.getProperty(this.scope(),name)},InformScriptWrapper.prototype.scope=function(){return this.script.scope},InformScriptWrapper}(),inform.cooperateAll=function(){var i,scriptsArray,scriptsArrayList;for(scriptsArrayList=net.zhuoweizhang.mcpelauncher.ScriptManager.scripts,scriptsArray=[],i=0;i<scriptsArrayList.size();)scriptsArray.push(new InformScriptWrapper(scriptsArrayList.get(i))),i++;return scriptsArray},inform.cooperateFind=function(name){var all,j,len,script;for(all=inform.scripts().all(),j=0,len=all.length;len>j;j++){if(script=all[j],script.name()===name)return all[i];i++}return null},inform.cooperateExpect=function(name){var all,j,len,script;for(all=inform.scripts().all(),j=0,len=all.length;len>j;j++){if(script=all[j],all[i].name()===name())return!0;i++}return!1},inform.scripts=function(){return{all:inform.cooperateAll,find:inform.cooperateFind,expect:inform.cooperateExpect}};