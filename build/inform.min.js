/* inform by @sliceofcode, licensed under MIT license, (c) 2016 sliceofcode | http://github.com/sliceofcode/inform */
function InformScriptWrapper(script){this.script=script}var inform={VERSION:"0.0.1"};InformScriptWrapper.prototype.defined=function(name){var scope=this.script.scope;return org.mozilla.javascript.ScriptableObject.hasProperty(scope,name)},InformScriptWrapper.prototype.real=function(){return this.script},InformScriptWrapper.prototype.set=function(name,value){org.mozilla.javascript.ScriptableObject.putProperty(this.scope(),name,value)},InformScriptWrapper.prototype.name=function(){return this.script.name},InformScriptWrapper.prototype.call=function(name,args){return org.mozilla.javascript.ScriptableObject.callMethod(this.scope(),name,args)},InformScriptWrapper.prototype.get=function(name){return org.mozilla.javascript.ScriptableObject.getProperty(this.scope(),name)},InformScriptWrapper.prototype.scope=function(){return this.script.scope},inform.cooperateAll=function(){for(var scriptsArrayList=net.zhuoweizhang.mcpelauncher.ScriptManager.scripts,scriptsArray=[],i=0;i<scriptsArrayList.size();i++)scriptsArray.push(new InformScriptWrapper(scriptsArrayList.get(i)));return scriptsArray},inform.cooperateFind=function(name){for(var all=inform.scripts().all(),i=0;i!=all.length;i++)if(all[i].name()==name)return all[i];return null},inform.cooperateExpect=function(name){for(var all=inform.scripts().all(),i=0;i!=all.length;i++)if(all[i].name()===name())return!0;return!1},inform.scripts=function(){return{all:inform.cooperateAll,find:inform.cooperateFind,expect:inform.cooperateExpect}};